<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gig.collide.mapper.FollowMapper">

    <!-- 基础字段列表 -->
    <sql id="baseColumns">
        id, follower_id, followee_id,
        follower_nickname, follower_avatar,
        followee_nickname, followee_avatar,
        status, create_time, update_time
    </sql>

    <!-- 根据关注者和被关注者查询关注关系（使用 uk_follower_followee 唯一索引） -->
    <select id="findByFollowerAndFollowee" resultType="com.gig.collide.domain.Follow">
        SELECT <include refid="baseColumns" />
        FROM t_follow
        WHERE follower_id = #{followerId}
          AND followee_id = #{followeeId}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        LIMIT 1
    </select>

    <!-- 检查关注关系是否存在（使用 uk_follower_followee 唯一索引） -->
    <select id="checkFollowExists" resultType="boolean">
        <![CDATA[
        SELECT COUNT(1) > 0
        FROM t_follow
        WHERE follower_id = #{followerId}
          AND followee_id = #{followeeId}
        ]]>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
    </select>

    <!-- 获取用户的关注列表（使用 idx_follower_status_time 索引） -->
    <select id="findFollowing" resultType="com.gig.collide.domain.Follow">
        SELECT <include refid="baseColumns" />
        FROM t_follow
        WHERE follower_id = #{followerId}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 获取用户的粉丝列表（使用 idx_followee_status_time 索引） -->
    <select id="findFollowers" resultType="com.gig.collide.domain.Follow">
        SELECT <include refid="baseColumns" />
        FROM t_follow
        WHERE followee_id = #{followeeId}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 获取互相关注的好友（使用 idx_mutual_follow 和 uk_follower_followee 索引） -->
    <select id="findMutualFollows" resultType="com.gig.collide.domain.Follow">
        SELECT f1.*
        FROM t_follow f1
        INNER JOIN t_follow f2 ON (
            f1.follower_id = f2.followee_id 
            AND f1.followee_id = f2.follower_id
        )
        WHERE f1.follower_id = #{userId}
          <if test="status != null and status != ''">
              AND f1.status = #{status}
              AND f2.status = #{status}
          </if>
        ORDER BY f1.create_time DESC
    </select>

    <!-- 根据昵称搜索关注关系（使用 idx_follower_nickname_fulltext/idx_followee_nickname_fulltext 全文索引） -->
    <select id="searchByNickname" resultType="com.gig.collide.domain.Follow">
        SELECT <include refid="baseColumns" />,
               <if test="nicknameKeyword != null and nicknameKeyword != ''">
                   (MATCH(follower_nickname) AGAINST(#{nicknameKeyword} IN NATURAL LANGUAGE MODE) +
                    MATCH(followee_nickname) AGAINST(#{nicknameKeyword} IN NATURAL LANGUAGE MODE)) as relevance_score
               </if>
               <if test="nicknameKeyword == null or nicknameKeyword == ''">
                   0 as relevance_score
               </if>
        FROM t_follow
        WHERE 1=1
          <if test="followerId != null">
              AND follower_id = #{followerId}
          </if>
          <if test="followeeId != null">
              AND followee_id = #{followeeId}
          </if>
          <if test="nicknameKeyword != null and nicknameKeyword != ''">
              AND (
                  MATCH(follower_nickname) AGAINST(#{nicknameKeyword} IN NATURAL LANGUAGE MODE)
                  OR MATCH(followee_nickname) AGAINST(#{nicknameKeyword} IN NATURAL LANGUAGE MODE)
                  OR follower_nickname LIKE CONCAT('%', #{nicknameKeyword}, '%')
                  OR followee_nickname LIKE CONCAT('%', #{nicknameKeyword}, '%')
              )
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        <choose>
            <when test="nicknameKeyword != null and nicknameKeyword != ''">
                ORDER BY relevance_score DESC, create_time DESC
            </when>
            <otherwise>
                ORDER BY create_time DESC
            </otherwise>
        </choose>
    </select>

    <!-- 统计用户的关注数量（使用 idx_follower_status 索引） -->
    <select id="countFollowing" resultType="long">
        SELECT COUNT(*)
        FROM t_follow
        WHERE follower_id = #{followerId}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
    </select>

    <!-- 统计用户的粉丝数量（使用 idx_followee_status 索引） -->
    <select id="countFollowers" resultType="long">
        SELECT COUNT(*)
        FROM t_follow
        WHERE followee_id = #{followeeId}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
    </select>

    <!-- 获取用户关注的作者ID列表（使用 idx_follower_status 索引） -->
    <select id="getFollowingAuthorIds" resultType="long">
        SELECT followee_id
        FROM t_follow
        WHERE follower_id = #{followerId}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 批量检查关注状态（使用 idx_follower_status_followee 索引） -->
    <select id="batchCheckFollowStatus" resultType="map">
        SELECT 
            followee_id as followeeId,
            <![CDATA[
            CASE WHEN COUNT(1) > 0 THEN 1 ELSE 0 END as isFollowing
            ]]>
        FROM t_follow
        WHERE follower_id = #{followerId}
          AND followee_id IN
          <foreach collection="followeeIds" item="followeeId" open="(" separator="," close=")">
              #{followeeId}
          </foreach>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        GROUP BY followee_id
    </select>

    <!-- 更新关注状态（使用 uk_follower_followee 唯一索引） -->
    <update id="updateFollowStatus">
        UPDATE t_follow
        SET status = #{status},
            update_time = NOW()
        WHERE follower_id = #{followerId}
          AND followee_id = #{followeeId}
    </update>

    <!-- 更新用户信息（冗余字段，使用 idx_follower_id 和 idx_followee_id 索引） -->
    <update id="updateUserInfo">
        <if test="updateAsFollower == true and updateAsFollowee == true">
            UPDATE t_follow
            SET follower_nickname = CASE WHEN follower_id = #{userId} THEN #{nickname} ELSE follower_nickname END,
                follower_avatar = CASE WHEN follower_id = #{userId} THEN #{avatar} ELSE follower_avatar END,
                followee_nickname = CASE WHEN followee_id = #{userId} THEN #{nickname} ELSE followee_nickname END,
                followee_avatar = CASE WHEN followee_id = #{userId} THEN #{avatar} ELSE followee_avatar END,
                update_time = NOW()
            WHERE follower_id = #{userId} OR followee_id = #{userId}
        </if>
        <if test="updateAsFollower == true and updateAsFollowee != true">
            UPDATE t_follow
            SET follower_nickname = #{nickname},
                follower_avatar = #{avatar},
                update_time = NOW()
            WHERE follower_id = #{userId}
        </if>
        <if test="updateAsFollower != true and updateAsFollowee == true">
            UPDATE t_follow
            SET followee_nickname = #{nickname},
                followee_avatar = #{avatar},
                update_time = NOW()
            WHERE followee_id = #{userId}
        </if>
    </update>

    <!-- 获取用户的关注统计信息（使用 idx_follower_status 和 idx_followee_status 索引） -->
    <select id="getUserFollowStatistics" resultType="map">
        SELECT 
            (SELECT COUNT(*) FROM t_follow WHERE follower_id = #{userId} AND status = 'active') as following_count,
            (SELECT COUNT(*) FROM t_follow WHERE followee_id = #{userId} AND status = 'active') as followers_count,
            (SELECT COUNT(*) FROM t_follow f1 
             INNER JOIN t_follow f2 ON (f1.follower_id = f2.followee_id AND f1.followee_id = f2.follower_id)
             WHERE f1.follower_id = #{userId} AND f1.status = 'active' AND f2.status = 'active') as mutual_count
    </select>

    <!-- 清理已取消的关注记录（使用 idx_status_update_time 索引） -->
    <delete id="cleanCancelledFollows">
        DELETE FROM t_follow
        WHERE status = 'cancelled'
          <![CDATA[
          AND update_time < DATE_SUB(NOW(), INTERVAL #{days} DAY)
          ]]>
    </delete>

    <!-- 复合条件查询关注记录（使用 idx_follower_followee_status_time 复合索引） -->
    <select id="findWithConditions" resultType="com.gig.collide.domain.Follow">
        SELECT <include refid="baseColumns" />
        FROM t_follow
        WHERE 1=1
          <if test="followerId != null">
              AND follower_id = #{followerId}
          </if>
          <if test="followeeId != null">
              AND followee_id = #{followeeId}
          </if>
          <if test="followerNickname != null and followerNickname != ''">
              AND follower_nickname LIKE CONCAT('%', #{followerNickname}, '%')
          </if>
          <if test="followeeNickname != null and followeeNickname != ''">
              AND followee_nickname LIKE CONCAT('%', #{followeeNickname}, '%')
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
          <if test="queryType == 'mutual'">
              AND EXISTS (
                  SELECT 1 FROM t_follow f2
                  WHERE f2.follower_id = t_follow.followee_id
                    AND f2.followee_id = t_follow.follower_id
                    AND f2.status = 'active'
              )
          </if>
        <choose>
            <when test="orderBy == 'update_time' and orderDirection == 'ASC'">
                ORDER BY update_time ASC
            </when>
            <when test="orderBy == 'update_time' and orderDirection == 'DESC'">
                ORDER BY update_time DESC
            </when>
            <when test="orderBy == 'create_time' and orderDirection == 'ASC'">
                ORDER BY create_time ASC
            </when>
            <otherwise>
                ORDER BY create_time DESC
            </otherwise>
        </choose>
    </select>

    <!-- 查询用户间的关注关系链（使用 uk_follower_followee 唯一索引） -->
    <select id="findRelationChain" resultType="com.gig.collide.domain.Follow">
        SELECT <include refid="baseColumns" />
        FROM t_follow
        WHERE (
            (follower_id = #{userIdA} AND followee_id = #{userIdB})
            OR (follower_id = #{userIdB} AND followee_id = #{userIdA})
        )
        AND status = 'active'
        ORDER BY create_time ASC
    </select>

</mapper>