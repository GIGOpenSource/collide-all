<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gig.collide.mapper.UserMapper">

    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.gig.collide.domain.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="avatar" property="avatar"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <!-- 注意：以下字段在数据库表中不存在，但实体类中有，设置为null -->
        <result column="null" property="passwordHash"/>
        <result column="null" property="role"/>
        <result column="null" property="bio"/>
        <result column="null" property="birthday"/>
        <result column="null" property="gender"/>
        <result column="null" property="location"/>
        <result column="null" property="followerCount"/>
        <result column="null" property="followingCount"/>
        <result column="null" property="contentCount"/>
        <result column="null" property="likeCount"/>
        <result column="null" property="vipExpireTime"/>
        <result column="is_vip" property="isVip"/>
        <result column="null" property="lastLoginTime"/>
        <result column="null" property="loginCount"/>
        <result column="null" property="inviteCode"/>
        <result column="null" property="inviterId"/>
        <result column="null" property="invitedCount"/>
    </resultMap>

    <!-- 基础字段列表 -->
    <sql id="Base_Column_List">
        id, username, nickname, email, phone, avatar, status, is_vip, create_time, update_time
    </sql>

    <!-- 根据ID查询用户 -->
    <select id="selectUserById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user
        WHERE id = #{id}
    </select>

    <!-- 分页查询用户列表 -->
    <select id="selectUserList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user
        <where>
            <if test="condition != null and condition != ''">
                (username LIKE CONCAT('%', #{condition}, '%') 
                 OR nickname LIKE CONCAT('%', #{condition}, '%')
                 OR email LIKE CONCAT('%', #{condition}, '%')
                 OR phone LIKE CONCAT('%', #{condition}, '%')
                 OR status = #{condition})
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 统计用户总数 -->
    <select id="countUsers" resultType="long">
        SELECT COUNT(*)
        FROM t_user
        <where>
            <if test="condition != null and condition != ''">
                (username LIKE CONCAT('%', #{condition}, '%') 
                 OR nickname LIKE CONCAT('%', #{condition}, '%')
                 OR email LIKE CONCAT('%', #{condition}, '%')
                 OR phone LIKE CONCAT('%', #{condition}, '%')
                 OR status = #{condition})
            </if>
        </where>
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="selectUserByUsername" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user
        WHERE username = #{username}
    </select>

    <!-- 根据邮箱查询用户 -->
    <select id="selectUserByEmail" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user
        WHERE email = #{email}
    </select>

    <!-- 根据手机号查询用户 -->
    <select id="selectUserByPhone" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user
        WHERE phone = #{phone}
    </select>

    <!-- 更新用户信息 -->
    <update id="updateUserById">
        UPDATE t_user
        <set>
            <if test="user.nickname != null and user.nickname != ''">
                nickname = #{user.nickname},
            </if>
            <if test="user.email != null and user.email != ''">
                email = #{user.email},
            </if>
            <if test="user.phone != null and user.phone != ''">
                phone = #{user.phone},
            </if>
            <if test="user.avatar != null and user.avatar != ''">
                avatar = #{user.avatar},
            </if>
            <if test="user.isVip != null and user.isVip != ''">
                is_vip = #{user.isVip},
            </if>
            <if test="user.status != null and user.status != ''">
                status = #{user.status},
            </if>
            update_time = NOW()
        </set>
        WHERE id = #{user.id}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteUserById">
        DELETE FROM t_user
        WHERE id = #{id}
    </delete>

    <!-- 批量更新用户状态 -->
    <update id="batchUpdateUserStatus">
        UPDATE t_user
        SET status = #{status},
            update_time = NOW()
        WHERE id IN
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </update>

    <!-- 根据VIP状态查询用户 -->
    <select id="selectUsersByVipStatus" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user
        WHERE is_vip = #{isVip}
        ORDER BY create_time DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 统计VIP用户数量 -->
    <select id="countVipUsers" resultType="long">
        SELECT COUNT(*)
        FROM t_user
        WHERE is_vip = #{isVip}
    </select>

</mapper>
