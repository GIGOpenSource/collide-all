<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gig.collide.mapper.FavoriteMapper">

    <!-- 基础字段列表 -->
    <sql id="baseColumns">
        id, favorite_type, target_id, user_id,
        target_title, target_cover, target_author_id,
        user_nickname, status, create_time, update_time
    </sql>

    <!-- 根据用户、类型和目标查询收藏（使用 uk_user_target 唯一索引） -->
    <select id="findByUserAndTarget" resultType="com.gig.collide.domain.Favorite">
        SELECT <include refid="baseColumns" />
        FROM t_favorite
        WHERE user_id = #{userId}
          AND favorite_type = #{favoriteType}
          AND target_id = #{targetId}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        LIMIT 1
    </select>

    <!-- 检查收藏是否存在（使用 uk_user_target 唯一索引） -->
    <select id="checkFavoriteExists" resultType="boolean">
        <![CDATA[
        SELECT COUNT(1) > 0
        FROM t_favorite
        WHERE user_id = #{userId}
          AND favorite_type = #{favoriteType}
          AND target_id = #{targetId}
        ]]>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
    </select>

    <!-- 获取用户的收藏列表（使用 idx_user_type_status_time 索引） -->
    <select id="findUserFavorites" resultType="com.gig.collide.domain.Favorite">
        SELECT <include refid="baseColumns" />
        FROM t_favorite
        WHERE user_id = #{userId}
          <if test="favoriteType != null and favoriteType != ''">
              AND favorite_type = #{favoriteType}
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 获取目标对象的收藏列表（使用 idx_target_type_status 索引） -->
    <select id="findTargetFavorites" resultType="com.gig.collide.domain.Favorite">
        SELECT <include refid="baseColumns" />
        FROM t_favorite
        WHERE favorite_type = #{favoriteType}
          AND target_id = #{targetId}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 根据标题搜索收藏（优化：支持全文索引和LIKE查询） -->
    <select id="searchByTitle" resultType="com.gig.collide.domain.Favorite">
        SELECT <include refid="baseColumns" />
        FROM t_favorite
        WHERE user_id = #{userId}
          <if test="titleKeyword != null and titleKeyword != ''">
              AND (
                  MATCH(target_title) AGAINST(#{titleKeyword} IN BOOLEAN MODE)
                  OR target_title LIKE CONCAT('%', #{titleKeyword}, '%')
              )
          </if>
          <if test="favoriteType != null and favoriteType != ''">
              AND favorite_type = #{favoriteType}
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY 
          <if test="titleKeyword != null and titleKeyword != ''">
              MATCH(target_title) AGAINST(#{titleKeyword} IN BOOLEAN MODE) DESC,
          </if>
          create_time DESC
    </select>

    <!-- 获取热门收藏对象（使用 idx_type_status_target_time 索引优化GROUP BY） -->
    <select id="findPopularFavorites" resultType="com.gig.collide.domain.Favorite">
        SELECT 
            target_id, favorite_type, target_title, target_cover, target_author_id,
            COUNT(*) as favorite_count,
            MAX(create_time) as latest_favorite_time
        FROM t_favorite
        WHERE favorite_type = #{favoriteType}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        GROUP BY target_id, favorite_type, target_title, target_cover, target_author_id
        ORDER BY favorite_count DESC, latest_favorite_time DESC
    </select>

    <!-- 统计用户收藏数量（使用 idx_user_status_type 索引） -->
    <select id="countUserFavorites" resultType="long">
        SELECT COUNT(*)
        FROM t_favorite
        WHERE user_id = #{userId}
          <if test="favoriteType != null and favoriteType != ''">
              AND favorite_type = #{favoriteType}
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
    </select>

    <!-- 统计目标对象被收藏数量（使用 idx_target_type_status 索引） -->
    <select id="countTargetFavorites" resultType="long">
        SELECT COUNT(*)
        FROM t_favorite
        WHERE favorite_type = #{favoriteType}
          AND target_id = #{targetId}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
    </select>

    <!-- 批量检查收藏状态（使用 uk_user_target 索引优化IN查询） -->
    <select id="batchCheckFavoriteStatus" resultType="map">
        SELECT 
            target_id as targetId,
            <![CDATA[
            CASE WHEN COUNT(1) > 0 THEN 1 ELSE 0 END as isFavorited
            ]]>
        FROM t_favorite
        WHERE user_id = #{userId}
          AND favorite_type = #{favoriteType}
          AND target_id IN
          <foreach collection="targetIds" item="targetId" open="(" separator="," close=")">
              #{targetId}
          </foreach>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        GROUP BY target_id
    </select>

    <!-- 更新收藏状态（使用 uk_user_target 唯一索引） -->
    <update id="updateFavoriteStatus">
        UPDATE t_favorite
        SET status = #{status},
            update_time = NOW()
        WHERE user_id = #{userId}
          AND favorite_type = #{favoriteType}
          AND target_id = #{targetId}
    </update>

    <!-- 更新用户信息（冗余字段，使用 idx_user_status_type 索引） -->
    <update id="updateUserInfo">
        UPDATE t_favorite
        SET user_nickname = #{nickname},
            update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 更新目标对象信息（冗余字段，使用 idx_target_type_status 索引） -->
    <update id="updateTargetInfo">
        UPDATE t_favorite
        SET target_title = #{title},
            target_cover = #{cover},
            target_author_id = #{authorId},
            update_time = NOW()
        WHERE favorite_type = #{favoriteType}
          AND target_id = #{targetId}
    </update>

    <!-- 获取用户收藏统计信息（使用 idx_user_status_type 索引） -->
    <select id="getUserFavoriteStatistics" resultType="map">
        SELECT 
            COUNT(*) as total_count,
            SUM(CASE WHEN favorite_type = 'CONTENT' THEN 1 ELSE 0 END) as content_count,
            SUM(CASE WHEN favorite_type = 'GOODS' THEN 1 ELSE 0 END) as goods_count,
            COUNT(DISTINCT target_author_id) as author_count,
            MAX(create_time) as latest_favorite_time
        FROM t_favorite
        WHERE user_id = #{userId}
          AND status = 'active'
    </select>

    <!-- 清理已取消的收藏记录（使用 idx_status_update_time 索引） -->
    <delete id="cleanCancelledFavorites">
        DELETE FROM t_favorite
        WHERE status = 'cancelled'
          <![CDATA[
          AND update_time < DATE_SUB(NOW(), INTERVAL #{days} DAY)
          ]]>
    </delete>

    <!-- 复合条件查询收藏记录（根据条件选择最优索引） -->
    <select id="findWithConditions" resultType="com.gig.collide.domain.Favorite">
        SELECT <include refid="baseColumns" />
        FROM t_favorite
        WHERE 1=1
          <if test="userId != null">
              AND user_id = #{userId}
          </if>
          <if test="favoriteType != null and favoriteType != ''">
              AND favorite_type = #{favoriteType}
          </if>
          <if test="targetId != null">
              AND target_id = #{targetId}
          </if>
          <if test="targetTitle != null and targetTitle != ''">
              AND target_title LIKE CONCAT('%', #{targetTitle}, '%')
          </if>
          <if test="targetAuthorId != null">
              AND target_author_id = #{targetAuthorId}
          </if>
          <if test="userNickname != null and userNickname != ''">
              AND user_nickname LIKE CONCAT('%', #{userNickname}, '%')
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
          <if test="queryType == 'popular'">
              GROUP BY target_id, favorite_type
              <![CDATA[
              HAVING COUNT(*) > 1
              ]]>
          </if>
        <choose>
            <when test="orderBy == 'update_time' and orderDirection == 'ASC'">
                ORDER BY update_time ASC
            </when>
            <when test="orderBy == 'update_time' and orderDirection == 'DESC'">
                ORDER BY update_time DESC
            </when>
            <when test="orderBy == 'create_time' and orderDirection == 'ASC'">
                ORDER BY create_time ASC
            </when>
            <otherwise>
                ORDER BY create_time DESC
            </otherwise>
        </choose>
    </select>

    <!-- 根据作者查询收藏作品（使用 idx_author_type_status_time 索引） -->
    <select id="findByAuthor" resultType="com.gig.collide.domain.Favorite">
        SELECT <include refid="baseColumns" />
        FROM t_favorite
        WHERE target_author_id = #{targetAuthorId}
          <if test="favoriteType != null and favoriteType != ''">
              AND favorite_type = #{favoriteType}
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 检查收藏关系是否存在（包括已取消的，使用 uk_user_target 唯一索引） -->
    <select id="existsFavoriteRelation" resultType="boolean">
        <![CDATA[
        SELECT COUNT(1) > 0
        FROM t_favorite
        WHERE user_id = #{userId}
          AND favorite_type = #{favoriteType}
          AND target_id = #{targetId}
        ]]>
    </select>

    <!-- 重新激活已取消的收藏（使用 uk_user_target 唯一索引） -->
    <update id="reactivateFavorite">
        UPDATE t_favorite
        SET status = 'active',
            update_time = NOW()
        WHERE user_id = #{userId}
          AND favorite_type = #{favoriteType}
          AND target_id = #{targetId}
          AND status = 'cancelled'
    </update>

    <!-- =================== 新增方法实现（支持Service层调用） =================== -->

    <!-- 获取用户收藏列表（分页）- 使用 idx_user_type_status_time 索引 -->
    <select id="selectUserFavorites" resultType="com.gig.collide.domain.Favorite">
        SELECT <include refid="baseColumns" />
        FROM t_favorite
        WHERE user_id = #{userId}
          <if test="favoriteType != null and favoriteType != ''">
              AND favorite_type = #{favoriteType}
          </if>
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 获取目标对象的收藏列表（分页）- 使用 idx_target_type_status 索引 -->
    <select id="selectTargetFavorites" resultType="com.gig.collide.domain.Favorite">
        SELECT <include refid="baseColumns" />
        FROM t_favorite
        WHERE favorite_type = #{favoriteType}
          AND target_id = #{targetId}
          <if test="status != null and status != ''">
              AND status = #{status}
          </if>
        ORDER BY create_time DESC
    </select>

    <!-- 根据标题搜索收藏（分页）- 支持全文索引和LIKE查询 -->
    <select id="searchFavorites" resultType="com.gig.collide.domain.Favorite">
        SELECT <include refid="baseColumns" />
        FROM t_favorite
        WHERE user_id = #{userId}
          <if test="titleKeyword != null and titleKeyword != ''">
              AND (
                  MATCH(target_title) AGAINST(#{titleKeyword} IN BOOLEAN MODE)
                  OR target_title LIKE CONCAT('%', #{titleKeyword}, '%')
              )
          </if>
          <if test="favoriteType != null and favoriteType != ''">
              AND favorite_type = #{favoriteType}
          </if>
          AND status = 'active'
        ORDER BY 
          <if test="titleKeyword != null and titleKeyword != ''">
              MATCH(target_title) AGAINST(#{titleKeyword} IN BOOLEAN MODE) DESC,
          </if>
          create_time DESC
    </select>

    <!-- 获取热门收藏对象（分页）- 使用 idx_type_status_target_time 索引优化GROUP BY -->
    <select id="selectPopularFavorites" resultType="com.gig.collide.domain.Favorite">
        SELECT 
            f.id, f.favorite_type, f.target_id, f.user_id,
            f.target_title, f.target_cover, f.target_author_id,
            f.user_nickname, f.status, f.create_time, f.update_time
        FROM t_favorite f
        INNER JOIN (
            SELECT 
                target_id, favorite_type,
                COUNT(*) as favorite_count,
                MAX(create_time) as latest_favorite_time
            FROM t_favorite
            WHERE favorite_type = #{favoriteType}
              AND status = 'active'
            GROUP BY target_id, favorite_type
            ORDER BY favorite_count DESC, latest_favorite_time DESC
        ) popular ON f.target_id = popular.target_id 
                  AND f.favorite_type = popular.favorite_type
        WHERE f.status = 'active'
        ORDER BY popular.favorite_count DESC, popular.latest_favorite_time DESC
    </select>

    <!-- 获取用户收藏统计信息 - 使用 idx_user_status_type 索引 -->
    <select id="getFavoriteStatistics" resultType="map">
        SELECT 
            favorite_type,
            COUNT(*) as count
        FROM t_favorite
        WHERE user_id = #{userId}
          AND status = 'active'
        GROUP BY favorite_type
        ORDER BY count DESC
    </select>

</mapper>